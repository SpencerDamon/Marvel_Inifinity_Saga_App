// Generated by view binder compiler. Do not edit!
package com.gmail.spencerdamon1974.spencerchallenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gmail.spencerdamon1974.spencerchallenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMarvelMovieListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivPoster;

  @NonNull
  public final TextView tvMovieGenre;

  @NonNull
  public final TextView tvMovieName;

  @NonNull
  public final TextView tvReleasedDate;

  private ItemMarvelMovieListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivPoster, @NonNull TextView tvMovieGenre, @NonNull TextView tvMovieName,
      @NonNull TextView tvReleasedDate) {
    this.rootView = rootView;
    this.ivPoster = ivPoster;
    this.tvMovieGenre = tvMovieGenre;
    this.tvMovieName = tvMovieName;
    this.tvReleasedDate = tvReleasedDate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMarvelMovieListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMarvelMovieListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_marvel_movie_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMarvelMovieListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivPoster;
      ImageView ivPoster = ViewBindings.findChildViewById(rootView, id);
      if (ivPoster == null) {
        break missingId;
      }

      id = R.id.tvMovieGenre;
      TextView tvMovieGenre = ViewBindings.findChildViewById(rootView, id);
      if (tvMovieGenre == null) {
        break missingId;
      }

      id = R.id.tvMovieName;
      TextView tvMovieName = ViewBindings.findChildViewById(rootView, id);
      if (tvMovieName == null) {
        break missingId;
      }

      id = R.id.tvReleasedDate;
      TextView tvReleasedDate = ViewBindings.findChildViewById(rootView, id);
      if (tvReleasedDate == null) {
        break missingId;
      }

      return new ItemMarvelMovieListBinding((ConstraintLayout) rootView, ivPoster, tvMovieGenre,
          tvMovieName, tvReleasedDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
